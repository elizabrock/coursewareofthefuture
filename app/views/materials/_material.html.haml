- covered_material = covered_materials.find{|cm| cm.material_fullpath == material.fullpath}

%tr{ data: { level: level }, id: "level_#{level}_#{material.local_id}" }
  %td.title
    - if material.markdown?
      = link_to material_path_for(material) do
        %span.title= material.formatted_title
    - else
      %span.title= material.formatted_title
  %td.data
    - if covered_material.present?
      - if read_materials_fullpaths.include?(covered_material.fullpath)
        .read-status.label.radius.secondary.fi-check read
      - else
        .read-status.label.radius.alert.fi-asterisk new&nbsp;
  %td.data
    - if material.leaf? and material.markdown?

      - covered_material ||= CoveredMaterial.new(material_fullpath: material.fullpath, covered_on: Time.zone.now)
      - status_class = covered_material.new_record? ? "secondary" : "covered_on"
      - label_copy = covered_material.new_record? ? "Upcoming" : "Covered #{covered_material.covered_on}"

      .label.radius{ class: status_class}
        = label_copy
        - if can?(:manage, CoveredMaterial)
          %a.edit-date-covered.fi-clock{ href: "#", data: { dropdown: "drop#{material.local_id}", options: "is_hover:true"}}
          .f-dropdown.content{ id: "drop#{material.local_id}", data: { dropdown: { content: "" } } }
            = render partial: 'covered_materials/form', locals: { covered_material: covered_material }

= render partial: "materials/material", collection: material.children, locals: { level: level+1 }
